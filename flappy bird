<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ratik - Flappy Bird Game</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Welcome to Ratik!</h1>
        <p>Play Flappy Bird directly on your phone.</p>
    </header>
    <main>
        <canvas id="gameCanvas"></canvas>
    </main>
    <script src="script.js"></script>
</body>
</html>
/* Basic reset */
body {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #87CEEB; /* Sky blue */
    font-family: Arial, sans-serif;
    text-align: center;
    overflow: hidden;
}

header {
    margin-top: 20px;
}

h1 {
    font-size: 2rem;
    margin: 0;
}

p {
    font-size: 1rem;
    margin: 0;
}

canvas {
    border: 2px solid #000;
    width: 100vw;
    height: 100vh;
}
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

// Resize canvas to fit window
function resizeCanvas() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
}

// Game settings
const GRAVITY = 0.6;
const FLAP_STRENGTH = -12;
const PIPE_WIDTH = 50;
const PIPE_HEIGHT = 300;
const PIPE_GAP = 150;
const PIPE_SPEED = 2;

// Bird settings
const BIRD_WIDTH = 34;
const BIRD_HEIGHT = 24;

let birdX = 50;
let birdY = canvas.height / 2;
let birdVelocity = 0;
let pipes = [];
let frame = 0;
let score = 0;
let gameOver = false;

// Initialize the game
function init() {
    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
    document.addEventListener('keydown', flap);
    document.addEventListener('click', flap);
    document.addEventListener('touchstart', flap); // Handle touch events for mobile
    setInterval(gameLoop, 1000 / 60); // 60 FPS
    generatePipe();
}

// Bird flap function
function flap(event) {
    event.preventDefault(); // Prevent default action for touch events
    if (!gameOver) {
        birdVelocity = FLAP_STRENGTH;
    }
}

// Game loop
function gameLoop() {
    if (!gameOver) {
        update();
        draw();
    }
}

// Update game state
function update() {
    frame++;
    birdVelocity += GRAVITY;
    birdY += birdVelocity;

    // Pipe movement
    pipes.forEach(pipe => {
        pipe.x -= PIPE_SPEED;
    });

    // Remove pipes that are out of canvas
    pipes = pipes.filter(pipe => pipe.x + PIPE_WIDTH > 0);

    // Generate new pipe
    if (frame % 90 === 0) {
        generatePipe();
    }

    // Check for collision
    if (birdY + BIRD_HEIGHT > canvas.height || birdY < 0 ||
        pipes.some(pipe => pipe.x < birdX + BIRD_WIDTH &&
                          pipe.x + PIPE_WIDTH > birdX &&
                          (birdY < pipe.y || birdY + BIRD_HEIGHT > pipe.y + PIPE_GAP))) {
        gameOver = true;
    }

    // Increase score
    pipes.forEach(pipe => {
        if (pipe.x + PIPE_WIDTH === birdX) {
            score++;
        }
    });
}

// Draw everything
function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Draw bird
    ctx.fillStyle = '#FF0'; // Yellow color
    ctx.fillRect(birdX, birdY, BIRD_WIDTH, BIRD_HEIGHT);

    // Draw pipes
    ctx.fillStyle = '#0F0'; // Green color
    pipes.forEach(pipe => {
        ctx.fillRect(pipe.x, 0, PIPE_WIDTH, pipe.y);
        ctx.fillRect(pipe.x, pipe.y + PIPE_GAP, PIPE_WIDTH, canvas.height - (pipe.y + PIPE_GAP));
    });

    // Draw score
    ctx.fillStyle = '#000'; // Black color
    ctx.font = '24px Arial';
    ctx.fillText(`Score: ${score}`, 10, 30);

    // Draw game over text
    if (gameOver) {
        ctx.fillStyle = '#FF0000'; // Red color
        ctx.font = '48px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('Game Over', canvas.width / 2, canvas.height / 2);
        ctx.font = '24px Arial';
        ctx.fillText(`Final Score: ${score}`, canvas.width / 2, canvas.height / 2 + 40);
    }
}

// Generate new pipe
function generatePipe() {
    const y = Math.random() * (canvas.height - PIPE_GAP - PIPE_HEIGHT);
    pipes.push({ x: canvas.width, y });
}

// Start the game
init();
